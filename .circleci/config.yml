# This code is licensed from CircleCI to the user under the MIT license.
# See here for details: https://circleci.com/developer/orbs/licensing
version: 2.1

executors:
  scanner:
    docker:
      - image: alpine:latest

commands:
  setup-environment:
    description: "Setup requirements"
    steps:
      - run:
          name: "Setup environment"
          command: |
            apk update
            apk add --no-cache zip openjdk11-jre-headless

  install-engine:
    description: "Install Sonarqube scanner"
    parameters:
      engine_version:
        type: string
        default: "4.6.2.2472"
    steps:
      - run:
          name: "Install Sonarqube scanner"
          command: |
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-<< parameters.engine_version >>.zip
            unzip sonar-scanner-cli-<< parameters.engine_version >>.zip

  code-analysis:
    description: "Run Sonarqube scanner for code analysis"
    parameters:
      organization:
        type: string
      host_url:
        type: string
      login:
        type: string
      projectKey:
        type: string
      projectBaseDir:
        type: string
        default: "/root/circleci-build"
      sources:
        type: string
        default: "."
      runner_opts:
        type: string
        default: "-Xms1024m -Xmx4096m"
      exclusions:
        type: string
        default: "**/*.yaml,**/*.yml"
      engine_version:
        type: string
        default: "4.6.2.2472"
    steps:
      - run:
          name: "Code analysis"
          command: |
            eval ./sonar-scanner-<< parameters.engine_version >>/bin/sonar-scanner \
              -Dsonar.host.url=${<< parameters.host_url >>} \
              -Dsonar.login=${<< parameters.login >>} \
              -Dsonar.projectKey=${<< parameters.projectKey >>} \
              -Dsonar.projectBaseDir=<< parameters.projectBaseDir >> \
              -Dsonar.sources=<< parameters.sources >> \
              -Dsonar.exclusions="<< parameters.exclusions >>"

  commit:
    description: |
      This command echos the status of the sonarqube scan.
    parameters:
      engine-version:
        description: The SonarQube scanner version.
        type: string        
      pull-request-base:
        description: The pull request base.
        type: string
      pull-request-branch:
        description: The pull request branch.
        type: string
      pull-request-key:
        description: The pull request key.
        type: string
      server-url:
        description: The SonarQube server URL.
        type: string
      system-code:
        description: The Biz-Ops system code.
        type: string
      token:
        description: The SonarQube server token.
        type: string
    steps:
      - run:
          command: |
            if [ -z <<parameters.pull-request-key>> ]; then
              echo "In IF"
              eval ./sonar-scanner-<<parameters.engine-version>>/bin/sonar-scanner \
              -Dsonar.projectKey=<<parameters.system-code>> \
              -Dsonar.sources=. \
              -Dsonar.host.url=<<parameters.server-url>> \
              -Dsonar.login=<<parameters.token>>
            else
              echo "In else"
              eval ./sonar-scanner-<<parameters.engine-version>>/bin/sonar-scanner \
              -Dsonar.projectKey=<<parameters.system-code>> \
              -Dsonar.sources=. \
              -Dsonar.host.url=<<parameters.server-url>> \
              -Dsonar.login=<<parameters.token>> \
              -Dsonar.pullrequest.key=<<parameters.pull-request-key>> \
              -Dsonar.pullrequest.branch=<<parameters.pull-request-branch>> \
              -Dsonar.pullrequest.base=<<parameters.pull-request-base>>
            fi
          name: Commit analysis
        
jobs:
  analyze:
    parameters:
      engine-version:
        type: string
        default: "4.6.2.2472"
      pull-request-base:
        default: KingdeJosh-patch-1
        description: The pull request base.
        type: string
      pull-request-branch:
        default: ${CIRCLE_BRANCH}
        description: The pull request branch.
        type: string
      pull-request-key:
        default: ${CIRCLE_PULL_REQUEST##*/}
        description: The pull request key.
        type: string
      organization:
        type: env_var_name
        default: SONARQUBE_SERVER_ORGANIZATION
      host_url:
        type: env_var_name
        default: SONARQUBE_SERVER_URL
      login:
        type: env_var_name
        default: SONARQUBE_SERVER_LOGIN
      projectKey:
        type: env_var_name
        default: SONARQUBE_PROJECT_KEY #CIRCLE_PROJECT_REPONAME --
      projectVersion:
        type: env_var_name
        default: CIRCLE_BUILD_NUM
      github_oauth:
        type: env_var_name
        default: SONARQUBE_GITHUB_OAUTH
      github_repository:
        type: env_var_name
        default: SONARQUBE_SERVER_ORGANIZATION
      github_pullRequest:
        type: env_var_name
        default: CIRCLECI_PULL_REQUEST_NUMBER
    executor: scanner
    steps:
      - checkout
      - setup-environment
      - install-engine
      - code-analysis:
          login: << parameters.login >>
          host_url: <<parameters.host_url >>
          organization: << parameters.organization >>
          projectKey: << parameters.projectKey >>
          projectBaseDir: ./
      - commit:
          engine-version: <<parameters.engine-version>>
          pull-request-base: <<parameters.pull-request-base>>
          pull-request-branch: <<parameters.pull-request-branch>>
          pull-request-key: <<parameters.pull-request-key>>
          server-url: <<parameters.host_url>>
          system-code: <<parameters.projectKey>>
          token: <<parameters.login>>

workflows:
  build_test_deploy:
    jobs:
      - analyze
    
